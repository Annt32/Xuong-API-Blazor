@page "/FieldShifts"
@using AppData.DTO
@using AppData.Entities
@using BlazorServer.IServices
@using BlazorServer.Models

@inject IFieldService FieldService
@inject IShiftService ShiftService
@inject IFieldShiftService FieldshiftService
@inject IServices<WebUser> UserService
@inject IJSRuntime JS
<h3>Quản Lý Ca Sân Bóng</h3>

<style>
    button[disabled] {
        opacity: 0.6;
        cursor: not-allowed;
        background-color: #d3d3d3; /* Màu xám nhạt */
        color: #ffffff; /* Màu chữ trắng (tuỳ chọn) */
        border-color: #d3d3d3; /* Màu viền xám nhạt */
    }

</style>

<div class="row">
    <!-- Thông Tin Sân Bóng -->
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <strong>Thông Tin</strong>
            </div>
            <EditForm Model="@fieldShift" OnValidSubmit="HandleSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                <DataAnnotationsValidator />
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert @((errorMessage.Contains("thành công") ? "alert-success" : "alert-danger"))" role="alert">
                        @errorMessage
                    </div>
                }

                <!-- Dropdown chọn sân bóng -->
                <div class="form-group">
                    <label for="FieldShift">Chọn Sân</label>
                    <select id="FieldShift" class="form-control" @bind="fieldShift.IdField">
                        <option value="">-- Chọn Sân --</option>
                        @foreach (var field in fieldShifts)
                        {
                            <option value="@field.IdField">@field.FieldName</option>
                        }
                    </select>
                </div>

                <!-- Dropdown chọn ca -->
                <div class="form-group">
                    <label for="Shift">Chọn Ca</label>
                    <select id="Shift" class="form-control" @bind="fieldShift.IdShift">
                        <option value="">-- Chọn Ca --</option>
                        @foreach (var shift in shifts)
                        {
                            <option value="@shift.IdShift">@shift.ShiftName</option>
                        }
                    </select>
                </div>

                <!-- Phần chọn ngày -->
                <div class="form-group">
                    <label for="Date">Chọn Ngày</label>
                    <input type="date" id="Date" class="form-control" @bind="fieldShift.Time" />
                    <ValidationMessage For="@(() => fieldShift.Time)" />
                </div>

                <!-- Dropdown chọn khách hàng -->
                <div class="form-group">
                    <label for="Customer">Chọn Khách Hàng</label>
                    <select id="Customer" class="form-control" @bind="selectedCustomerId">
                        <option value="">-- Chọn Khách Hàng --</option>
                        @foreach (var customer in customers)
                        {
                            <option value="@customer.UserId">@customer.FullName</option>
                        }
                    </select>
                </div>
            
                <div class="form-group">
                    <label>Trạng Thái</label><br />
                    <input type="radio" id="active" @onclick="() => fieldShift.Status = 1" checked="@((fieldShift.Status == 1))" />
                    <label for="active">Chờ CheckIn</label>
                    <input type="radio" id="maintenance" @onclick="() => fieldShift.Status = 2" checked="@((fieldShift.Status == 2))" />
                    <label for="maintenance">Đang Thuê</label>
                    <ValidationMessage For="@(() => fieldShift.Status)" />
                </div>

                <!-- Nút Tạo và Cập Nhật -->
                <div class="form-group">
                    @if (fieldShift.IdFieldShift == Guid.Empty)
                    {
                        <button type="submit" class="btn btn-primary">Tạo</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-warning">Cập Nhật</button>
                    }
                </div>
            </EditForm>
        </div>
    </div>

    <!-- Danh Sách Sân -->
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <strong>Danh Sách Ca Sân</strong>
                <div class="input-group mt-2">
@*                     <input type="text" class="form-control" placeholder="Tìm kiếm tên sân bóng..." @bind="searchText" />
 *@                    <div class="input-group-append">
                       @*  <button class="btn btn-secondary" @onclick="SearchFields">
                            <i class="fas fa-search"></i> Tìm Kiếm
                        </button> *@
                    </div>
                </div>
            </div>
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Người đặt</th>
                            <th>SDT</th>
                            <th>Sân</th>
                            <th>Ngày</th>
                            <th>Ca</th>
                            <th>Thời gian</th>
                            <th>Trạng Thái</th>
                            <th>Thao Tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (fieldShiftViewModels == null || !fieldShiftViewModels.Any())
                        {
                            <tr>
                                <td colspan="9" class="text-center">Đang tải dữ liệu...</td>
                            </tr>
                        }
                        else
                        {
                            int index = 0;
                            @foreach (var item in fieldShiftViewModels)
                            {
                                <tr>
                                    <td>@(++index)</td>
                                    <td>@item.CustomerFullName</td>
                                    <td>@item.CustomerPhoneNumber</td>

                                    <td>@item.FieldName</td>
                                    <td>@item.Time.ToString("dd/MM/yyyy")</td>
                                    <td>@item.ShiftName</td>
                                    <td>@item.StartTime (@item.EndTime)</td>
                                
                                    <td>@(item.Status == 1 ? "Bình thường" : "Đang thuê")</td>
                                    <td>
                                        <button class="btn btn-info" @onclick="() => EditField(item.IdFieldShift)">
                                            <i class="fas fa-edit"></i> Sửa
                                        </button>
                                        <button class="btn btn-danger" @onclick="() => ConfirmDelete(item.IdFieldShift)">
                                            <i class="fas fa-trash-alt"></i> Xóa
                                        </button>

                                        <!-- Nút CheckIn chỉ hiện khi Status == 1 -->
                                        <button class="btn btn-success" @onclick="() => ConfirmCheckIn(item.IdFieldShift)" disabled="@(item.Status != 1)">
                                            CheckIn
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>

                </table>
            </div>
        </div>
    </div>
</div>

@code {
    private List<FieldShiftViewModel> fieldShiftViewModels = new List<FieldShiftViewModel>();
    private FieldShiftViewModel fieldShiftVM = new FieldShiftViewModel();
    private FieldShiftViewModel fieldShift = new FieldShiftViewModel(); // Sử dụng ViewModel
    private List<WebUser> customers = new List<WebUser>();
    private List<FieldViewModel> fieldShifts = new List<FieldViewModel>(); // Danh sách sân bóng
    private List<ShiftViewModel> shifts = new List<ShiftViewModel>(); // Danh sách ca

    private Guid selectedCustomerId;  // Lưu ID khách hàng đã chọn


    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Load danh sách FieldShift và các thông tin liên quan
        var allFieldshifts = await FieldshiftService.GetAllFieldshiftAsync();

        customers = await UserService.GetAllFieldsAsync();
        fieldShifts = await FieldService.GetAllFieldsAsync();  // Lấy tất cả sân bóng
        shifts = await ShiftService.GetAllShiftsAsync();  // Lấy tất cả ca làm việc


        fieldShiftViewModels = (await Task.WhenAll(allFieldshifts.Select(async f =>
        {   
            var shift = await ShiftService.GetShiftByIdAsync(f.IdShift);
            var field = await FieldService.GetFieldByIdAsync(f.IdField);

            // Lấy thông tin khách hàng từ CreatedBy
            var customer = await UserService.GetFieldByIdAsync(Guid.Parse(f.CreatedBy));

            return new FieldShiftViewModel
                {
                    IdFieldShift = f.IdFieldShift,
                    IdShift = f.IdShift,
                    ShiftName = shift?.ShiftName ?? "Unknown",  // Lấy tên của Shift
                    FieldName = field?.FieldName ?? "Unknown",  // Lấy tên của Field
                    Time = f.Time,
                    StartTime = shift?.StartTime ?? "Zero",     // Lấy StartTime từ Shift
                    EndTime = shift?.EndTime ?? "Zero",         // Lấy EndTime từ Shift
                    Status = f.Status,
                    CreatedAt = f.CreatedAt,
                    UpdatedAt = f.UpdatedAt,

                    // Hiển thị thông tin khách hàng
                    CustomerFullName = customer?.FullName ?? "Unknown",
                    CustomerPhoneNumber = customer?.PhoneNumber ?? "Unknown"
                };
        }))).ToList();
    }





    // Giả sử bạn có các service để lấy tên Shift và Field
    private async Task<string> GetShiftName(Guid idShift)
    {
        var shift = await ShiftService.GetShiftByIdAsync(idShift);
        return shift?.ShiftName ?? "Unknown";
    }

    private async Task<string> GetFieldName(Guid idField)
    {
        var field = await FieldService.GetFieldByIdAsync(idField);
        return field?.FieldName ?? "Unknown";
    }

    private async Task<WebUser> GetUserById(Guid userId)
    {
        var user = await UserService.GetFieldByIdAsync(userId);
        return user;
    }

    private async Task CheckIn(Guid idFieldShift)
    {
        var fieldShift = fieldShiftViewModels.FirstOrDefault(f => f.IdFieldShift == idFieldShift);
        if (fieldShift != null)
        {
            fieldShift.Status = 2;  // Đang thuê
            await FieldshiftService.UpdateFieldshiftAsync(fieldShift.IdFieldShift, new FieldShiftDTO
                {
                    IdFieldShift = fieldShift.IdFieldShift,
                    IdShift = fieldShift.IdShift,
                    Status = 2, // Cập nhật trạng thái là "Đang thuê"
                    CreatedAt = fieldShift.CreatedAt,
                    UpdatedAt = DateTime.Now,
                    CreatedBy = fieldShift.CreatedBy,
                    UpdatedBy = "User"
                });
        }
    }

    private async Task ConfirmCheckIn(Guid idFieldShift)
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirmAction", "Bạn có chắc chắn muốn CheckIn sân bóng này?");
        if (confirmed)
        {
            await CheckIn(idFieldShift);
        }
    }

    private async Task HandleSubmit()
    {
        if (selectedCustomerId == Guid.Empty)
        {
            errorMessage = "Vui lòng chọn khách hàng.";
            return;
        }

        var newFieldShift = new FieldShiftDTO
            {
                IdFieldShift = Guid.NewGuid(),
                IdShift = fieldShiftVM.IdShift,
                IdField = fieldShiftVM.IdField,
                Status = 1,
                CreatedBy = selectedCustomerId.ToString(),  // Gán ID khách hàng đã chọn vào CreatedBy
                CreatedAt = DateTime.Now,
                UpdatedAt = DateTime.Now
            };

        var result = await FieldshiftService.CreateFieldshiftAsync(newFieldShift);

        if (result)
        {
            // Logic khi tạo mới thành công
        }
        else
        {
            // Xử lý lỗi
        }
    }



    private void HandleInvalidSubmit()
    {
        // Xử lý khi form không hợp lệ
    }

    private void EditField(Guid idFieldShift)
    {
        // Thực hiện logic khi chỉnh sửa
    }

    private async Task ConfirmDelete(Guid idFieldShift)
    {
        // Logic xóa
    }

   
}



